name: stage distribution

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Node Install
        run: |
          npm install

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Run Test
        run: npm test

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android App Bundle
        run: |
          cd android && ./gradlew assembleStageRelease --no-daemon

      - name: Build and Distribute
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APP_ID: ${{ secrets.APP_ID }}
          GROUP_NAME: ${{ secrets.GROUP_NAME }}
        run: |
          if [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "Deploying to staging..."
            firebase appdistribution:distribute \
              android/app/build/outputs/apk/stage/release/app-stage-release.apk \
              --app com.delivery.stage \
              --groups ${{ secrets.GROUP_NAME }} \
              --token ${{ secrets.FIREBASE_TOKEN }}
          elif [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "Deploying to production..."
            firebase appdistribution:distribute \
              android/app/build/outputs/apk/dev/release/app-stage-release.apk \
              --app com.delivery.dev \
              --groups ${{ secrets.GROUP_NAME }} \
              --token ${{ secrets.FIREBASE_TOKEN }}
          else
            echo "Invalid environment specified."
            exit 1
          fi
